<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.doc.system.mapper.SysUserMapper">

    <resultMap type="SysUser" id="SysUserResult">
        <result property="userId"       column="user_id"   	      />
        <result property="username"     column="user_name"    />
        <result property="nickName"     column="nick_name"    />
        <result property="email"        column="email"        />
        <result property="phone"        column="phone"        />
		<result property="qq"           column="qq"           />
		<result property="wx"           column="wx"           />
        <result property="sex"          column="sex"          />
        <result property="avatar"       column="avatar"       />
        <result property="password"     column="password"     />
		<result property="payPassword"	column="pay_password" />
        <result property="status"       column="status"       />
        <result property="delFlag"      column="del_flag"     />
        <result property="loginIp"      column="login_ip"     />
        <result property="loginTime"    column="login_time"   />
        <result property="createBy"     column="create_by"    />
        <result property="createTime"   column="create_time"  />
        <result property="updateBy"     column="update_by"    />
        <result property="updateTime"   column="update_time"  />
        <result property="remark"       column="remark"       />
		<result property="level"        column="level"        />
		<result property="score"        column="score"        />
		<result property="experience"   column="experience"   />
		<result property="balance"     column="balance"       />
		<result property="role" 		column="role"		  />
	</resultMap>

	<sql id="selectUserVo">
		select u.* from sys_user u
	</sql>

	<select id="selectUserList" parameterType="SysUser" resultMap="SysUserResult">
		select * from sys_user u where u.del_flag = 0
		<if test="userId != null and userId != 0">
			AND u.user_id = #{userId}
		</if>
		<if test="username != null and username != ''">
			AND u.user_name like concat('%', #{username}, '%')
		</if>
		<if test="status != null and status != ''">
			AND u.status = #{status}
		</if>
		<if test="phone != null and phone != ''">
			AND u.phone like concat('%', #{phone}, '%')
		</if>
		<if test="qq != null and qq != '' ">
			and u.qq = #{qq}
		</if>
		<if test="wx!= null and wx != '' ">
			and u.wx= #{wx}
		</if>
		<if test="params != null ">
			<if test="params.beginTime != null and params.beginTime != ''">
				<!-- 开始时间检索 -->
				and date_format(u.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
			</if>
			<if test="params.endTime != null and params.endTime != ''">
				<!-- 结束时间检索 -->
				and date_format(u.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
			</if>
		</if>
	</select>

	<select id="selectUserByUserName" parameterType="String" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.user_name = #{username} and u.del_flag = 0
	</select>

	<select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.user_id = #{userId}
	</select>

	<select id="checkUserNameUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, user_name from sys_user where user_name = #{username} and del_flag = 0 limit 1
	</select>

	<select id="checkPhoneUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, phone from sys_user where phone = #{phone} and del_flag = 0 limit 1
	</select>

	<select id="checkEmailUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, email from sys_user where email = #{email} and del_flag = 0 limit 1
	</select>

	<select id="getUserByEmail" parameterType="String" resultMap="SysUserResult">
		select * from sys_user where email = #{email} and del_flag = 0
	</select>

	<insert id="insertUser" parameterType="SysUser" useGeneratedKeys="true" keyProperty="userId">
		insert into sys_user
		(user_name, nick_name, email, phone, qq, wx, sex, avatar, password, create_by, create_time, update_by, update_time)
		values
			(#{username},#{nickName},#{email},#{phone},#{qq},#{wx},#{sex},#{avatar},#{password},#{createBy},#{createTime},#{updateBy},#{updateTime})
	</insert>

	<update id="updateUser" parameterType="SysUser">
		update sys_user
		<set>
			<if test="username != null and username != ''">user_name = #{username},</if>
			<if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
			<if test="email != null ">email = #{email},</if>
			<if test="phone != null ">phone = #{phone},</if>
			<if test="qq != null and qq != '' ">qq = #{qq},</if>
			<if test="wx != null and wx != '' ">wx = #{wx},</if>
			<if test="sex != null and sex != ''">sex = #{sex},</if>
			<if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
			<if test="password != null and password != ''">password = #{password},</if>
			<if test="payPassword != null and payPassword != ''">pay_password = #{payPassword},</if>
			<if test="status != null and status != ''">status = #{status},</if>
			<if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
			<if test="loginTime != null">login_time = #{loginTime},</if>
			<if test="updateBy != null and updateBy != ''"></if>
			<if test="remark != null">remark = #{remark},</if>
			<if test="level != null and level >= 1 ">level = #{level},</if>
			<if test="score!= null and score >= 0 ">score = #{score},</if>
			<if test="experience != null and experience >= 0 ">experience = #{experience},</if>
			<if test="balance != null and balance >= 0 ">balance = #{balance},</if>
			<if test="role!= null and role >= 0 ">role = #{role},</if>
			update_time = #{updateTime}
		</set>
		where user_id = #{userId}
	</update>

	<update id="updateUserAvatar" parameterType="SysUser">
		update sys_user set avatar = #{avatar} where user_name = #{username}
	</update>

	<update id="resetUserPwd" parameterType="SysUser">
		update sys_user set password = #{password} where user_name = #{username}
	</update>

	<update id="updateUserEmail">
		update sys_user set email = #{email} where user_id = #{userId}
	</update>

	<delete id="deleteUserById" parameterType="Long">
		update sys_user set del_flag = 1 where user_id = #{userId}
	</delete>

	<delete id="deleteUserByIds" parameterType="Long">
		update sys_user set del_flag = 1 where user_id in
		<foreach collection="array" item="userId" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>
	
</mapper> 